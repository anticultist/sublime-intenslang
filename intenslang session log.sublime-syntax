%YAML 1.2
---

name: INTENS Session log
scope: text.intenssessionlog

variables:
  name: '[A-Za-z_][A-Za-z_0-9]*'
  float_number: '\b([0-9][0-9_]*)(\.|(\.([0-9][0-9_]*))?([eE][+-]?([0-9][0-9_]*))?\b)'

contexts:
  main:
    - match: '^(Print>) (FUNC) ({{name}})(\s*(//.*)?)?$'
      captures:
        1: markup.bold.intenssessionlog
        2: storage.type.function.intenssessionlog
        3: support.function.builtin.intenssessionlog
        4: comment.line.double-dash.intenssessionlog
    - match: '^Print> '
      scope: markup.bold.intenssessionlog
    - match: '^(ERROR) (:) (ServerSocket) (-) (\d+) (-) (.*)'
      captures:
        1: keyword.control.intenssessionlog
        2: punctuation.separator.intenssessionlog
        3: support.type.intenssessionlog
        4: punctuation.separator.intenssessionlog
        5: constant.numeric.intenssessionlog
        6: punctuation.separator.intenssessionlog
        7: markup.italic.intenssessionlog
    - match: '^(\d\d\d\d-\d\d-\d\d \d\d:\d\d:\d\d[ ]?:)'
      captures:
        1: markup.bold.intenssessionlog
      push:
        - match: '$'
          pop: true
        - match: '\bopened file\b'
          scope: support.function.builtin.intenssessionlog
        - match: '(BEGIN)([ \.]:) (OPEN|SAVE) (FileStream) (.*)'
          captures:
            1: keyword.control.intenssessionlog
            2: punctuation.separator.intenssessionlog
            3: support.function.builtin.intenssessionlog
            4: support.type.intenssessionlog
            5: markup.italic.intenssessionlog
        - match: '(END) (:) (FileStream) (.*)'
          captures:
            1: keyword.control.intenssessionlog
            2: punctuation.separator.intenssessionlog
            3: support.type.intenssessionlog
            4: markup.italic.intenssessionlog
        - match: '(ERROR) (:) (ClientSocket) (-) (.*)'
          captures:
            1: keyword.control.intenssessionlog
            2: punctuation.separator.intenssessionlog
            3: support.type.intenssessionlog
            4: punctuation.separator.intenssessionlog
            5: markup.italic.intenssessionlog
        - match: 'with params'
          scope: markup.italic.intenssessionlog
        - match: '\['
          scope: punctuation.section.brackets.begin.intenssessionlog
          push:
            - match: (?=$)
              pop: true
            - match: '\]'
              scope: punctuation.section.brackets.end.intenssessionlog
              pop: true
            - match: \,
              scope: punctuation.separator.delimiter.intenssessionlog
            - include: one_line_string
    - match: '(Return value) (-)?({{float_number}})'
      captures:
        1: keyword.control.intenssessionlog
        2: constant.numeric.intenssessionlog
        3: constant.numeric.intenssessionlog
    - match: '(exit) (.*)'
      captures:
        1: markup.bold.intenssessionlog
        2: markup.italic.intenssessionlog
    - match: '[\.\-=#<>]{3,}'
      scope: punctuation.separator.intenssessionlog
    - match: '(=)\s*'
      captures:
        1: keyword.operator.assignment.intenssessionlog
      push:
        - match: '{{float_number}}'
          scope: constant.numeric.intenssessionlog
        - match: '\b[0-9a-f]+\b'
          scope: constant.numeric.intenssessionlog
        - match: '-'
          scope: constant.numeric.intenssessionlog
        - match: '\bnan\b'
          scope: constant.numeric.intenssessionlog
        - match: '<invalid>'
          scope: constant.numeric.intenssessionlog
        - match: '{[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}}'  # GUID
          scope: string.unquoted.intenssessionlog
        - include: one_line_string
        - match: (?=.)
          pop: true
        - match: $
          pop: true

  one_line_string:
    - match: \'
      scope: punctuation.definition.string.begin.intenssessionlog
      push:
        - meta_scope: string.quoted.single.intenssessionlog
        - match: (?=$)
          pop: true
        - match: \'
          scope: punctuation.definition.string.end.intenssessionlog
          pop: true
